plotscript, battle, formation, begin
	variable (i, var, counter, sli)
	initBattle(1)
	battle:win := -1
	while (battle:win==-1) do (
		battleLoopHandler
	)
	subscript, battleLoopHandler, begin
		counter := herocount

		sli := get array(array:battletimers)
		#go through heroes
		for (i, 0, herocount--1) do (
			battle:turn := 0
			if (readStat(i,stat:HP)>0) then (
				var := getElement(sli, i+1)
				var -= readStat(i,stat:Speed)
				if (var<0) then (
					battle:turn := i
					heroturn(i)
					var := random(1000, 1000 -- readStat(i,stat:Speed)/2)
					specwait (1)
				)
				setElement (sli, i+1, var)
			)
			if (battle:win<>-1) then (break)
		)
		if (battle:win<>-1) then (break)

		#go through enemies
		for (i, 4, enemycount+3) do (
			if (readStat(i,stat:HP)>0) then (
				var := getElement(sli, i+1)
				var -= readStat(i,stat:Speed)
				if (var<0) then (
					enemyturn(i)
					var := random(1000, 1000 -- readStat(i,stat:Speed)/2)
					specwait (1)
				)
				
				setElement (sli, i+1, var)
			)
			if (battle:win<>-1) then (break)
		)
	end

	battleEnd(battle:win)
end


#=======================================================================
#=======================================================================

script, battlecheck, begin
	variable (var, var2, sli, counter, i)

	#check for all characters dead or all enemies dead
	switch (herocount) do (
		case (1) do (
			if (readStat(0, stat:HP)==0) then (battle:win := 0)
		)
		case (2) do (
			if (
				readStat(0, stat:HP)==0&&readStat(1, stat:HP)==0
			) then (battle:win := 0)
		)
		case (3) do (
			if (
				readStat(0, stat:HP)==0&&readStat(1, stat:HP)==0&&
				readStat(2, stat:HP)==0
			) then (battle:win := 0)
		)
		case (4) do (
			if (
				readStat(0, stat:HP)==0&&readStat(1, stat:HP)==0&&
				readStat(2, stat:HP)==0&&readStat(3, stat:HP)==0
			) then (battle:win := 0)
		)
	) 

	switch (enemycount) do (
		case (1) do (
			if (readStat(4, stat:HP)==0) then (battle:win := 1)
		)
		case (2) do (
			if (
				readStat(4, stat:HP)==0&&readStat(5, stat:HP)==0
			) then (battle:win := 1)
		)
		case (3) do (
			if (
				readStat(4, stat:HP)==0&&readStat(5, stat:HP)==0&&
				readStat(6, stat:HP)==0
			) then (battle:win := 1)
		)
		case (4) do (
			if (
				readStat(4, stat:HP)==0&&readStat(5, stat:HP)==0&&
				readStat(6, stat:HP)==0&&readStat(7, stat:HP)==0
			) then (battle:win := 1)
		)
	) 

end

#=======================================================================
#=======================================================================


#=======================================================================
#=======================================================================

script, initTurnArray, begin
	variable (sli, i)
	clear(lookupslice(array:turn))
end

script, herocount, begin
	return (getElement(get array(array:battleinfo), battle:herocount))
end

script, enemycount, begin
	return (getElement(get array(array:battleinfo), battle:enemycount))
end

#stats are 0-3 for heroes, 4-7 for enemies.
script, readStat, who, stat, begin
	return (getElement (slicechild(lookupslice(array:stats), who), stat))
end

script, writestat, who, stat, amount, begin
	return (setElement (slicechild(lookupslice(array:stats), who), stat, amount))
end

#=======================================================================
#=======================================================================