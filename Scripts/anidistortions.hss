script, loadbattleback, formation, begin
	variable (sli, sli2, i, j, height, width)
	variable (set1, set2, blend1, blend2, opacity1, opacity2)

	sli := load backdrop sprite (2)
	height := sliceHeight(sli)
	width  := sliceWidth(sli)
	dissolve sprite (sli, dissolve:fade, 40, 0, true)
	put slice (sli, 0, -10)
	center slice (sli)
	set slice clipping (sli, true)
	set slice lookup(sli, sli:battleback)
	set parent (sli, lookupslice(sli:battlecol))
	sliceToBack (sli)

	switch (formation)do(
		case (1) do (
			set1 := 9, set2 := 9
			blend1 := blend:normal
			blend2 := blend:normal
			opacity1 := 60
			opacity2 := 60
		)
		case (2) do (
			set1 := 6, set2 := 7
			blend1 := blend:add
			blend2 := blend:multiply
			opacity1 := 100
			opacity2 := 50
		) else (
			set1 := 2, set2 := 2
			blend1 := blend:normal
			blend2 := blend:normal
			opacity1 := 100
			opacity2 := 100
		)
	)

	for (j, 0, 1) do (
		sli := create container ()
		set parent(sli, lookupslice(sli:battleback))
		put slice (sli, 0, 0)


		for (i, 0, height--1) do (
			sli := create container(600, 1)
			put slice (sli, 0, i) 
			set parent (sli, last child (lookupslice(sli:battleback)))
			set slice clipping (sli, true)

			if (j == 0) then (
				sli2 := load backdrop sprite (set1)
				set blend mode (sli2, blend1)
				set opacity (sli2, opacity1)

			) else (
				sli2 := load backdrop sprite (set2)
				set blend mode (sli2, blend2)
				set opacity (sli2, opacity2)
			)
			dissolve sprite (sli2, dissolve:fade, 40, 0, true)

			set parent (sli2, sli)
			put slice (sli2, 0, i * -1)	
		)
	)
end

script, sinedist, begin
	variable (i, j, sli, offset, newX, x, y, t,  formation)
	variable (amplitude, frequency, timeScaling, mode, compression)
	variable (scrolly, varY, height, width)

	formation := getElement(get array(array:battleinfo), battle:formation)

	sli := slice child (first child (first child (lookupslice(sli:battleback))))

	height := sliceHeight (lookupslice(sli:battleback))
	width := sliceWidth(lookupslice(sli:battleback))
	for (j, 0, 1) do (

		if (j == 0) then (
			switch (formation) do (
				case (1) do (
					amplitude := 20, frequency := 1, compression := 1
					timeScaling := 1, mode := 2, scrolly:=-4
				)
				case (2) do (
					amplitude := 2, frequency := 8, compression := 3
					timeScaling := 30, mode := 1, scrolly:=0
				) else (
					amplitude := 4, frequency := 20, compression := 1
					timeScaling := 20, mode := 3, scrolly:=0
				)
			)
		) else (
			switch (formation) do (

				case (1) do (
					amplitude := 100, frequency := 2, compression := 1
					timeScaling := 1, mode := 2, scrolly:=1
				)
				case (2) do (
					amplitude := 4, frequency := 20, compression := 1
					timeScaling := 40, mode := 3, scrolly:=0
				) else (
					amplitude := 4, frequency := 20, compression := 1
					timeScaling := 20, mode := 3, scrolly:=0
				)
			)
		)

		t := game:tick
		if (timeScaling == 0) then (timeScaling := 1)
		t := t/800000

		for (i, 0, height--1) do (
			x := 0
			sli := first child (slice child (slice child (lookupslice(sli:battleback), j), i))
			
			offset := sine ((frequency*i)/2 + game:tick) * amplitude/6000
			varY := get slice extra (sli, 1) + scrollY
			Y := varY/4*t
			
			if (mode == 1) then(
				x := offset
				y := i + y
				
				y += (-1 *y  / height) * height
				y := (y + height), mod, height

				put slice (sli, x, y * -1)

			) else if (mode == 2) then (
				if (i, mod, 2) then (offset := offset * -1) else ()
				x := offset
				y := i + y
				
				y += (-1 *y  / height) * height
				y := (y + height), mod, height

				put slice (sli, x, y * -1)
			) else if (mode == 3) then (

				

				y := i * compression + offset + Y

				y += (-1 *y  / height) * height
				y := (y + height), mod, height

				put slice (sli, x, y * -1) 
			)
			set slice extra (sli, 1, vary)
		)
		
	)
end

script, freebattleback, begin
	variable (i, j, height, sli)

	dissolve sprite (lookupslice(sli:battleback), dissolve:fade, 105)

	sli := slice child (first child (first child (lookupslice(sli:battleback))))
	height := slice height (sli)

	for (j, 0, 1) do (
		for (i, 0, height--1) do (
			sli := first child (slice child (slice child (lookupslice(sli:battleback), j), i))
			dissolve sprite (sli, dissolve:fade, 105)		
		)
	)
end